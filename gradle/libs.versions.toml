[versions]
agp = "8.5.1"
biometric = "1.4.0-alpha01"
coilCompose = "2.7.0"
converterScalars = "2.11.0"
core = "1.6.1"
coreSplashscreen = "1.0.1"
credentials = "1.5.0-alpha02"
credentialsPlayServicesAuth = "1.2.2"
datastorePreferences = "1.1.1"
firebaseBom = "33.1.2"
googleid = "1.1.1"
googleidVersion = "1.1.1"
gradle = "8.5.1"
hiltAndroid = "2.51.1"
hiltAndroidTesting = "2.51.1"
hiltAndroidVersion = "2.51.1"
hiltNavigationCompose = "1.2.0"
junitJunit = "4.13.2"
kotlin = "1.9.0"
coreKtx = "1.13.1"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
appcompat = "1.7.0"
kotlinGradlePlugin = "1.6.21"
kotlintestRunnerJunit4 = "3.3.2"
kotlinxCoroutinesTest = "1.8.1"
lifecycleRuntimeKtxVersion = "2.8.3"
material = "1.12.0"
lifecycleRuntimeKtx = "2.8.3"
activityCompose = "1.9.0"
composeBom = "2024.06.00"
materialIconsExtendedAndroid = "1.6.8"
mockitoAll = "1.9.5"
mockitoAndroid = "3.3.1"
mockitoCore = "5.2.1"
mockitoCoreVersion = "5.7.0"
mockitoInline = "2.13.0"
mockitoKotlin = "4.2.0"
mockitoKotlinVersion = "5.3.1"
mockitoMockitoCore = "5.12.0"
mockitoMockitoKotlin = "5.3.1"
mockk = "1.13.12"
mockkAndroid = "1.13.11"
navigationCompose = "2.7.7"
pagingRuntimeKtx = "3.3.0"
paletteKtx = "1.0.0"
playServicesAuth = "21.2.0"
powermockApiMockito2 = "2.0.9"
powermockModuleJunit4 = "2.0.9"
retrofit = "2.11.0"
robolectric = "4.13"
roomCompiler = "2.6.1"
roomRuntime = "2.6.1"
pagingCompose = "3.3.0"
roomTesting = "2.6.1"
truth = "1.4.4"
turbine = "1.1.0"
uiTestJunit4 = "1.6.8"
uiTestManifest = "1.6.8"
runner = "1.6.1"
pagingTestingAndroid = "3.3.0"
workRuntimeKtx = "2.9.0"
hiltCommon = "1.2.0"
hiltWork = "1.2.0"
workTesting = "2.9.0"

[libraries]
androidx-biometric = { module = "androidx.biometric:biometric", version.ref = "biometric" }
androidx-core = { module = "androidx.test:core", version.ref = "core" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
androidx-credentials = { module = "androidx.credentials:credentials", version.ref = "credentials" }
androidx-credentials-play-services-auth = { module = "androidx.credentials:credentials-play-services-auth", version.ref = "credentialsPlayServicesAuth" }
androidx-datastore-core = { module = "androidx.datastore:datastore-core", version.ref = "datastorePreferences" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
androidx-espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "espressoCore" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }
androidx-lifecycle-runtime-ktx-v231 = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtxVersion" }
androidx-material-icons-extended-android = { module = "androidx.compose.material:material-icons-extended-android", version.ref = "materialIconsExtendedAndroid" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
androidx-navigation-testing = { module = "androidx.navigation:navigation-testing", version.ref = "navigationCompose" }
androidx-paging-runtime-ktx = { module = "androidx.paging:paging-runtime-ktx", version.ref = "pagingRuntimeKtx" }
androidx-palette-ktx = { module = "androidx.palette:palette-ktx", version.ref = "paletteKtx" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomCompiler" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomCompiler" }
androidx-room-paging = { module = "androidx.room:room-paging", version.ref = "roomCompiler" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomRuntime" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }
com-google-dagger-hilt-compiler2 = { module = "com.google.dagger:hilt-compiler", version.ref = "hiltAndroidTesting" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterScalars" }
converter-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "converterScalars" }
core-ktx = { module = "androidx.test:core-ktx", version.ref = "core" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-auth = { module = "com.google.firebase:firebase-auth" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
google-hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hiltAndroidTesting" }
googleid = { module = "com.google.android.libraries.identity.googleid:googleid", version.ref = "googleid" }
googleid-vlatestversion = { module = "com.google.android.libraries.identity.googleid:googleid", version.ref = "googleidVersion" }
gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroid" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hiltAndroid" }
hilt-android-gradle-plugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hiltAndroidTesting" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hiltAndroidTesting" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hiltAndroidTesting" }
hilt-android-v2511 = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroidVersion" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
junit-v413 = { module = "junit:junit", version.ref = "junitJunit" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinGradlePlugin" }
kotlin-mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlinVersion" }
kotlintest-runner-junit4 = { module = "io.kotlintest:kotlintest-runner-junit4", version.ref = "kotlintestRunnerJunit4" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
mockito-all = { module = "org.mockito:mockito-all", version.ref = "mockitoAll" }
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockitoAndroid" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockitoCore" }
mockito-core-v5120 = { module = "org.mockito:mockito-core", version.ref = "mockitoMockitoCore" }
mockito-core-v570 = { module = "org.mockito:mockito-core", version.ref = "mockitoCoreVersion" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockitoInline" }
mockito-kotlin-v420 = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
mockito-kotlin-v521 = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoMockitoKotlin" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android" }
mockk-mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockkAndroid" }
play-services-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "playServicesAuth" }
powermock-api-mockito2 = { module = "org.powermock:powermock-api-mockito2", version.ref = "powermockApiMockito2" }
powermock-module-junit4 = { module = "org.powermock:powermock-module-junit4", version.ref = "powermockModuleJunit4" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
androidx-paging-compose = { group = "androidx.paging", name = "paging-compose", version.ref = "pagingCompose" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
room-testing = { module = "androidx.room:room-testing", version.ref = "roomTesting" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "uiTestJunit4" }
ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "uiTestManifest" }
androidx-runner = { group = "androidx.test", name = "runner", version.ref = "runner" }
androidx-paging-testing-android = { group = "androidx.paging", name = "paging-testing-android", version.ref = "pagingTestingAndroid" }
androidx-work-runtime-ktx = { group = "androidx.work", name = "work-runtime-ktx", version.ref = "workRuntimeKtx" }
androidx-hilt-common = { group = "androidx.hilt", name = "hilt-common", version.ref = "hiltCommon" }
androidx-hilt-work = { group = "androidx.hilt", name = "hilt-work", version.ref = "hiltWork" }
androidx-work-testing = { group = "androidx.work", name = "work-testing", version.ref = "workTesting" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
jetbrainsKotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }

